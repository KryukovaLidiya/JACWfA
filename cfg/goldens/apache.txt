9/14/2015 Starting Apache Apache
HTTP Server Version 2.5
http://httpd.apache.org/docs/trunk/en/invoking.html 1/2
Apache HTTP Server Version 2.5
Starting Apache
On Windows, Apache is normally run as a service. For details, see Running Apache as a Service
(? platform/windows.html#winsvc) .
On Unix, the httpd program is run as a daemon that executes continuously in the background to handle
requests. This document describes how to invoke httpd.
How Apache Starts
Errors During Startup
Starting at BootTime
Additional Information
See also
Stopping and Restarting
httpd
apachectl
Comments
How Apache Starts
If the Listen specified in the configuration file is default of 80 (or any other port below 1024), then it is
necessary to have root privileges in order to start apache, so that it can bind to this privileged port. Once the
server has started and performed a few preliminary activities such as opening its log files, it will launch several
child processes which do the work of listening for and answering requests from clients. The main httpd
process continues to run as the root user, but the child processes run as a less privileged user. This is controlled
by the selected MultiProcessing
Module (? mpm.html) .
The recommended method of invoking the httpd executable is to use the apachectl control script. This
script sets certain environment variables that are necessary for httpd to function correctly under some
operating systems, and then invokes the httpd binary. apachectl will pass through any command line
arguments, so any httpd options may also be used with apachectl. You may also directly edit the
apachectl script by changing the HTTPD variable near the top to specify the correct location of the httpd
binary and any commandline
arguments that you wish to be always present.
The first thing that httpd does when it is invoked is to locate and read the configuration file
(? configuring.html) httpd.conf. The location of this file is set at compiletime,
but it is possible to specify
its location at run time using the f
commandline
option as in
/usr/local/apache2/bin/apachectl f
/usr/local/apache2/conf/httpd.conf
If all goes well during startup, the server will detach from the terminal and the command prompt will return
almost immediately. This indicates that the server is up and running. You can then use your browser to connect
to the server and view the test page in the DocumentRoot directory.
Errors During Startup
If Apache suffers a fatal problem during startup, it will write a message describing the problem either to the
console or to the ErrorLog before exiting. One of the most common error messages is "Unable to bind
to Port ...". This message is usually caused by either:
Trying to start the server on a privileged port when not logged in as the root user? or
9/14/2015 Starting Apache Apache
HTTP Server Version 2.5
http://httpd.apache.org/docs/trunk/en/invoking.html 2/2
RSS Log in / register
Trying to start the server when there is another instance of Apache or some other web server already
bound to the same Port.
For further troubleshooting
instructions, consult the Apache FAQ (? http://wiki.apache.org/httpd/FAQ) .
Starting at BootTime
If you want your server to continue running after a system reboot, you should add a call to apachectl to your
system startup files (typically rc.local or a file in an rc.N directory). This will start Apache as root. Before
doing this ensure that your server is properly configured for security and access restrictions.
The apachectl script is designed to act like a standard SysV init script? it can take the arguments start,
restart, and stop and translate them into the appropriate signals to httpd. So you can often simply link
apachectl into the appropriate init directory. But be sure to check the exact requirements of your system.
Additional Information
Additional information about the commandline
options of httpd and apachectl as well as other support
programs included with the server is available on the Server and Supporting Programs (? programs/) page. There
is also documentation on all the modules (? mod/) included with the Apache distribution and the directives
(? mod/directives.html) that they provide.
Comments
Notice:
This is not a Q&A section. Comments placed here should be pointed towards suggestions on improving
the documentation or server, and may be removed again by our moderators if they are either implemented
or considered invalid/offtopic.
Questions on how to manage the Apache HTTP Server should be directed
at either our IRC channel, #httpd, on Freenode, or sent to our mailing lists.
No comments have been made so far.
The 2.4 branch of the documentation has comments available for this page. Click here to view them.
Copyright 2015 The Apache Software Foundation.
Licensed under the Apache License, Version 2.0.